- name: install microcode packages
  package:
    name: "{{ item.key }}"
    state: "{{ 'present' if item.value else 'absent' }}"
  with_dict:
    amd64-microcode: "{{ 'AuthenticAMD' in ansible_processor }}"
    intel-microcode: "{{ 'GenuineIntel' in ansible_processor }}"



- name: install firmware packages
  package:
    name: firmware-linux
    state: present
  when: not armbian



- name: un/install firmware updater
  package:
    name: fwupd
    state: "{{ 'present' if use_fwupd else 'absent' }}"

- name: get firmware updates
  register: fwupd_refresh_result
  command: fwupdmgr refresh
  failed_when: fwupd_refresh_result.rc not in [0, 2]
  changed_when: fwupd_refresh_result.rc == 0
  when: use_fwupd

- name: apply firmware updates
  register: fwupd_update_result
  command: fwupdmgr update

  # pre Buster, fwupdmgr didn't consistently gave rc 2 if nothing to do
  failed_when: >-
    fwupd_update_result.rc not in [0, 2]
    and "Nothing to do" not in fwupd_update_result.stdout

  changed_when: "'Updating' in fwupd_update_result.stdout"
  when: use_fwupd and fwupd_refresh_result.changed

- name: disable firmware updater units (no unattended updates)
  register: disable_fwupd_units_result
  service:
    name: "{{ item }}"
    state: stopped
    enabled: no
  with_items:
    - fwupd.service
    - fwupd-refresh.timer
    - fwupd-refresh.service
  failed_when: disable_fwupd_units_result.state is not defined and
               "Could not find" not in disable_fwupd_units_result.msg
  when: use_fwupd



- name: check if the machine was booted using UEFI
  register: stat_sys_firmware_efi_result
  stat:
    path: /sys/firmware/efi
  when: support_for_secure_boot

- name: un/install signed Secure Boot chain-loading bootloader
  package:
    name: shim-signed
    state: "{{ 'present' if support_for_secure_boot
                         and stat_sys_firmware_efi_result.stat.exists
                else 'absent' }}"



- name: install ``irqbalance`` on multi-core machines
  package:
    name: irqbalance
    state: "{{ 'present' if ansible_processor_vcpus > 1 else 'absent' }}"

- name: enable and start ``irqbalance`` on multi-core machines
  service:
    name: irqbalance
    state: started
    enabled: yes
  when: ansible_processor_vcpus > 1



- name: get Western Digital drives present
  set_fact:
    western_digital_drives: "{{ western_digital_drives|default([]) + [item.key] }}"
  when: item.value.rotational == "1" and
        item.value.model != None and
        item.value.model is match("WDC .+")
  with_dict: "{{ ansible_devices }}"
  loop_control:
    label: "{{ item.key }}"

- name: "{{ 'install' if western_digital_drives|default(false)
            else 'uninstall' }} idle3 tools for Western Digital drives"
  package:
    name: idle3-tools
    state: "{{ 'present' if western_digital_drives|default(false)
                else 'absent' }}"

- name: disable IntelliPark for Western Digital drives
        (power management takes care)
  # check if ``idle3ctl`` works on this drive;
  #   if so, disable IntelliPark;
  #   if not, exit with return code ``0``
  shell: "idle3ctl -g /dev/{{ item }}
          && idle3ctl -d /dev/{{ item }}
          || true"
  with_items: "{{ western_digital_drives|default([]) }}"
  changed_when: false
