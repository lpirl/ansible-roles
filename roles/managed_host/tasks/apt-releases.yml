- name: create configuration file to set release priorities
  blockinfile:
    dest: /etc/apt/preferences.d/000-release-pinning
    create: yes
    insertbefore: BOF
    marker: "# {mark} ANSIBLE MANAGED README BLOCK"
    block: |
      # Managed by Ansible (lpirl/ansible-roles, role "managed_host").
      # Do not edit this file, it will likely result in odd behavior.
      # Instead, create a separate file in this directory or use the
      # role's variable ``apt_release_priorities_extra``.

  when: apt_release_priorities
        | combine(apt_release_priorities_extra
                  | default({}))

- name: configure apt repositories for standard releases (stable, testing, â€¦)
  include_tasks: _apt-config-configure-standard-release.yml

  vars:
    suite: "{{ item.key }}"
    release: "{{ suite.split('-').0.split('/').0 }}"
    pin_priority: "{{ item.value }}"
    file: "/etc/apt/sources.list.d/{{ release }}.list"
    present: "{{ true if item.value else false }}"
    no_security_repo_releases:
      - sid
      - unstable
      - experimental
    security_old_format_releases:
      - buster
      - jessie
      - oldoldstable
      - oldstable
      - stable
      - stretch

  with_dict: "{{
    apt_release_priorities
    | combine(apt_release_priorities_extra
              | default({}))
  }}"

  loop_control:
    label: "{{ item.key }}"

- name: flush handlers in case apt cache needs to be updated
  meta: flush_handlers

- name: get contents of /etc/apt/sources.list
  register: cat_sources_list_result
  shell: cat /etc/apt/sources.list
  changed_when: not cat_sources_list_result.stdout
                | regex_findall('^(?!\s*#).*$', multiline=True)
  failed_when: false
  notify: notify root about empty /etc/apt/sources.list
  tags: [report]
